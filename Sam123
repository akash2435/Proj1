<div class="jumbotron">
<h1 class="font-weight-bolder">Customer Details</h1>
</div>
 
<div>
<form>
<table>
<tr>
<td><label class="font-weight-bold">Frist Name</label></td>
<td><input type="text" placeholder="Enter your Frist Name" /></td>
</tr>
<tr>
<td><label class="font-weight-bold">Last Name</label></td>
<td><input type="text" placeholder="Enter your Last Name" /></td>
</tr>
<tr>
<td><label class="font-weight-bold">Email</label></td>
<td><input type="email" placeholder="Enter your Email" /></td>
</tr>
<tr>
<td><label class="font-weight-bold">Phone Number</label></td>
<td><input type="number" placeholder="Enter Phone Number" /></td>
</tr>
<tr>
<td><label class="font-weight-bold">Date of Birth</label></td>
<td><input type="date" /></td>
</tr>
<tr>
<td><label class="font-weight-bold">Select Gender</label></td>
<td>
<div class="dropdown">
<button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Dropdown Button
</button>
<div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
<a class="dropdown-item">Male</a>
<a class="dropdown-item">Female</a>
</div>
</div>
</td>
</tr>
<tr>
<td><label class="font-weight-bold">Country</label></td>
<td><input type="text" placeholder="Enter your Country" /></td>
</tr>
<tr>
<td><label class="font-weight-bold">State</label></td>
<td><input type="text" placeholder="Enter your State" /></td>
</tr>
<tr>
<td><button class="btn btn-info" id="button1" type="submit">Submit</button></td>
<td><button class="btn btn-danger" type="submit">Cancel</button></td>
</tr>
</table>
</form>
</div>

===============================================

define(['plugins/router', 'knockout', 'durandal/app', 'plugins/http', 'global/session', 'config'],
    function (router, ko, app, https, session, config) {
 
        var orderTypes = ko.observableArray();
        var type = ko.observable('Test');
 
        var vm = {
            activate: activateM,
            canActivate: canActivateM,
            canDeactivate: canDeactivateM,
            compositionComplete: compositionCompleteM,
            orderTypes: orderTypes,
            type: type,
            addType: addType
        };
 
 
        function canActivateM() {
            console.log('canActivate');
            return true;
        }
        function activateM() {
            //orderTypes.push(type());
            console.log('Activate');
        }
 
        function compositionCompleteM() {
            console.log('compositionComplete');
        }
        function canDeactivateM() {
            console.log('canDeactivate');
            return true;
        }
 
        function addType() {
            var newType = type();
            orderTypes.push(newType);
            type('');
        }
 
        return vm;
    });
