<!--<style>
    span
    {
        display:none;
    }
</style>-->
<div class="jumbotron">
<h1 class="font-weight-bolder">Customer Details</h1>
</div>
 
<div>
<form>
<table>
<tr>
<td><label class="font-weight-bold">Frist Name</label></td>
<td><input type="text" placeholder="Enter your Frist Name" data-bind="value:firstName"/></td>
<td><span class="invalid-feedback" data-bind="validationMessage:firstName"></span></td>
</tr>
<tr>
<td><label class="font-weight-bold">Last Name</label></td>
<td><input type="text" placeholder="Enter your Last Name" data-bind="value:lastName"/></td>
<td><span class="invalid-feedback" data-bind="validationMessage:lastName"></span></td>
</tr>
<tr>
<td><label class="font-weight-bold">Email</label></td>
<td><input type="email" placeholder="Enter your Email" data-bind="value:email" /></td>
<td><span class="invalid-feedback" data-bind="validationMessage:email"></span></td>
<!--<td><span style="color:red">Please enter an Email ID</span></td>-->
</tr>
<tr>
<td><label class="font-weight-bold">Phone Number</label></td>
<td><input type="number" placeholder="Enter Phone Number" data-bind="value:phoneNumber" /></td>
<td><span class="invalid-feedback" data-bind="validationMessage:phoneNumber"></span></td>
<!--<td><span style="color:red">Please enter a Phone Number</span></td>-->
</tr>
<tr>
<td><label class="font-weight-bold">Date of Birth</label></td>
<td><input type="date" data-bind="value:dob" /></td>
<td><span class="invalid-feedback" data-bind="validationMessage:dob"></span></td>
<!--<td><span style="color:red">Date of Birth is required</span></td>-->
</tr>
<tr>
<td><label class="font-weight-bold">Select Gender</label></td>
<td>
<div class="dropdown">
<button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Dropdown Button
</button>
<div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
<a class="dropdown-item" data-bind="click:function() {gender('Male')}">Male</a>
<a class="dropdown-item" data-bind="click:function() {gender('Female')}">Female</a>
</div>
</div>
</td>
<td><span style="color:blue" data-bind="text:gender"></span></td>
<td><span class="invalid-feedback" data-bind="validationMessage:gender"></span></td>
<!--<td><span style="color:red" >Please select your gender</span></td>-->
</tr>
<tr>
<td><label class="font-weight-bold">Country</label></td>
<td><input type="text" placeholder="Enter your Country" data-bind="value:country" /></td>
<td><span class="invalid-feedback" data-bind="validationMessage:country"></span></td>
<!--<td><span style="color:red" >Please enter a valid Country Name</span></td>-->
</tr>
<tr>
<td><label class="font-weight-bold">State</label></td>
<td><input type="text" placeholder="Enter your State" data-bind="value:state" /></td>
<td><span class="invalid-feedback" data-bind="validationMessage:state"></span></td>
<!--<td><span style="color:red" >Please enter a valid State Name</span></td>-->
</tr>
<tr>
<td><button class="btn btn-info" id="button1" type="submit" data-bind="click:inps">Submit</button></td>
<td><button class="btn btn-danger" type="submit">Cancel</button></td>
</tr>
</table>
</form>
</div>

===============================================

define(['plugins/router', 'knockout', 'durandal/app', 'plugins/http', 'global/session', 'config','knockout.validation'],
    function (router, ko, app, https, session, config) {
 
        ko.validation.init({
            insertMessages: true,
            decorateInputElement: true,
            errorElementClass: 'is-invalid',
            errorMessageClass: 'invalid-feedback',
            parseInputAttributes:true
        });
 
        ko.validation.rules['myrule'] = {
            validator: function (val) {
                return /^[a-zA-Z]+$/.test(val);
            },
            message: 'Please enter only Alphabetic Characters'
        };
 
        ko.validation.rules['phonerule'] = {
            validator: function (val) {
                return /^\{10}$/.test(val);
            },
            message:'Please enter a valid phone number'
        }
 
        //var orderTypes = ko.observableArray();
        //var type = ko.observable('Test');
        var details = ko.observableArray();
        var firstName = ko.observable('').extend({required:true, myrule:true});
        var lastName = ko.observable('').extend({ required: true, myrule: true });
        var email = ko.observable('').extend({ required: true, email: true });
        var dob = ko.observable('').extend({ required: true});
        var gender = ko.observable('').extend({ required: true });
        var phoneNumber = ko.observable('').extend({ required: true, phonerule: true });
        var country = ko.observable('').extend({ required: true });
        var state = ko.observable('').extend({ required: true });
 
        var vm = {
            activate: activateM,
            canActivate: canActivateM,
            canDeactivate: canDeactivateM,
            compositionComplete: compositionCompleteM,
            firstName: firstName,
            lastName: lastName,
            email: email,
            dob: dob,
            gender: gender,
            phoneNumber: phoneNumber,
            country: country,
            state: state,
            details: details,
            inps:inps,
            //orderTypes: orderTypes,
            //type: type,
            //addType: addType,
            //validateForm: validateForm,
            //submitForm: submitForm
            //MyViewModel: MyViewModel,
            //submitt: submitt,
        };
 
        ko.validation.group(vm);
        //function MyViewModel() {
        //    var self = this;
 
        //    self.firstName = ko.observable('');
        //    self.lastName = ko.observable('');
        //    self.emailId = ko.observable('');
        //    self.phoneNumber = ko.observable('');
        //    self.dob = ko.observable('');
        //    self.gender = ko.observable('');
        //    self.country = ko.observable('');
        //    self.state = ko.observable('');
 
        //    self.fnameError = ko.observable(false);
        //    self.lnameError = ko.observable(false);
        //    self.emailIdError = ko.observable(false);
        //    self.phoneNumberError = ko.observable(false);
        //    self.dobError = ko.observable(false);
        //    self.genderError = ko.observable(false);
        //    self.countryError = ko.observable(false);
        //    self.stateError = ko.observable(false);
 
        //    self.fnameCheck = function () {
        //        self.fnameError(!self.firstName());
        //    };
 
        //    self.lnameCheck = function () {
        //        self.lnameError(!self.lastName());
        //    };
 
        //    self.emailCheck = function () {
        //        self.emailIdError(!self.emailId());
        //    };
 
        //    self.phoneCheck = function () {
        //        self.phoneNumberError(!self.phoneNumber());
        //    };
        //    self.dobCheck = function () {
        //        self.dobError(!self.dob());
        //    };
 
        //    self.genderCheck = function () {
        //        self.genderError(!self.gender());
        //    };
 
        //    self.countryCheck = function () {
        //        self.countryError(!self.country());
        //    };
 
        //    self.stateCheck = function () {
        //        self.stateError(!self.state());
        //    };
 
        //    self.submitForm = function () {
        //        if (!self.firstName() || !self.lastName() || !self.emailId() || !self.phoneNumber() || !self.dob() || !self.gender() || !self.country() || !self.state()) {
        //            alert("Please fill-in all the fields");
        //        }
        //        else {
        //            alert("Info Stored Succesfully!");
        //        }
        //    };
        //}
 
        //function submitt() {
        //    alert("Success!");
        //}
        //function intakes() {
        //    this.firstName = ko.observable("");
 
        //    this.submitBtn = function () {
        //        console.log(this.firstName());
        //    };
        //}

 
        //document.addEventListener('DOMContentLoaded', function () {
        //    var form = document.getElementById('validform');
        //    var submitBtn = document.getElementById('button1');
 
        //    submitBtn.addEventListener('click', function () {
        //        if (validateForm(form)) {
        //            submitForm(form);
        //        }
        //    });
        //});
 
        //function validateForm() {
        //    var firstName = form.elements['firstName'].value.trim();
 
        //    if (firstName === '') {
        //        alert('Missing');
        //        return false;
        //    }
        //}
 
        //function submitForm(form) {
        //    var firstName = form.elements['firstName'].value.trim();
 
        //    alert('Success');
 
        //    console.log("First Name: " + firstName);
 
        //    form.reset();
        //}
        function canActivateM() {
            console.log('canActivate');
            return true;
        }
        function activateM() {
            //orderTypes.push(type());
            console.log('Activate');
        }
 
        function compositionCompleteM() {
            console.log('compositionComplete');
        }
        function canDeactivateM() {
            console.log('canDeactivate');
            return true;
        }
 
        function inps() {
            var inputs = {
                firstName: firstName(),
                lastName: lastName(),
                email: email(),
                dob: dob(),
                phoneNumber: phoneNumber(),
                gender: gender(),
                country: country(),
                state: state(),
            };
            if (inputs.firstName === '' || inputs.lastName === '' || inputs.email === '' || inputs.dob === '' || inputs.phoneNumber === '' || inputs.gender === '' || inputs.country === '' || inputs.state === '') {
                alert("Please Fill-in all the fields");
            }
            else {
                alert("Submission successful!");
                details.push(inputs);
                console.log(inputs);
                clearFields();
            }
            //details.push(inputs);
            //console.log(inputs);
            //clearFields();
        }
 
        function clearFields() {
            firstName('');
            lastName('');
            email('');
            dob('');
            phoneNumber('');
            gender('');
            country('');
            state('');
        }
 
        //function addType() {
        //    var newType = type();
        //    orderTypes.push(newType);
        //    type('');
        //}
 
        return vm;
    });
