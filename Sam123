<div class="jumbotron">
<h1 class="font-weight-bolder">Customer Details</h1>
</div>
 
<div>
<form data-bind="submit:handleSubmit">
<table>
<tr>
<td><label class="font-weight-bold">First Name</label></td>
<td><input type="text" placeholder="Enter your Frist Name" data-bind="value:firstName"></td>
</tr>
<tr>
<td><label class="font-weight-bold">Last Name</label></td>
<td><input type="text" placeholder="Enter your Last Name" data-bind="value:lastName"/></td>
</tr>
<tr>
<td><label class="font-weight-bold">Email</label></td>
<td><input type="email" placeholder="Enter your Email" data-bind="value:email" /></td>

</tr>
<tr>
<td><label class="font-weight-bold">Phone Number</label></td>
<td><input type="number" placeholder="Enter Phone Number" data-bind="value:phoneNumber" /></td>

</tr>
<tr>
<td><label class="font-weight-bold">Date of Birth</label></td>
<td><input type="date" data-bind="value:dob" /></td>

</tr>
<tr>
<td><label class="font-weight-bold">Gender</label></td>
<td>
<div class="dropdown">
<button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Select Gender
</button>
<div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
<a class="dropdown-item" data-bind="click:function() {gender('Male')}">Male</a>
<a class="dropdown-item" data-bind="click:function() {gender('Female')}">Female</a>
</div>
</div>
</td>
<td><span style="color:blue" data-bind="text:gender"></span></td>

</tr>
<tr>
<td><label class="font-weight-bold">Country</label></td>
<td><input type="text" placeholder="Enter your Country" data-bind="value:country" /></td>

</tr>
<tr>
<td><label class="font-weight-bold">State</label></td>
<td><input type="text" placeholder="Enter your State" data-bind="value:state" /></td>

</tr>
<tr>
<td><button class="btn btn-info" id="button1" type="submit">Submit</button></td>
<td><button class="btn btn-danger" type="submit">Cancel</button></td>
</tr>
</table>
</form>
</div>

===============================================

define(['plugins/router', 'knockout', 'durandal/app', 'plugins/http', 'global/session', 'config', 'knockout.validation'],
    function (router, ko, app, https, session, config) {
 
        var vm = {
            activate: activateM,
            canActivate: canActivateM,
            canDeactivate: canDeactivateM,
            compositionComplete: compositionCompleteM,
 
            /*First Name Validation Function*/
            firstName: ko.observable("").extend({
                required: true,
                pattern: {
                    params: /^[A-Za-z\s]+$/,
                    message: "Please enter a valid First Name"
                },
                minLength: {
                    params: 3,
                    message: "The First name should at least contain 3 characters"
                }
            }),
 
            /*Last Name Validation Function*/
            lastName: ko.observable("").extend({
                required: true,
                pattern: {
                    params: /^[A-Za-z\s]+$/,
                    message: "Please enter a valid Last Name"
                },
                minLength: {
                    params: 1,
                    message: "The Last Name should at least contain a single characters"
                }
            }),
 
            /*Email Validation Function*/
            email: ko.observable("").extend({
                required: true,
                email: true
            }),
 
            /*Phone-Number Validation Function*/
            phoneNumber: ko.observable("").extend({
                required: true,
                validation: {
                    message: "Mobile number should be 10 digits",
                    validator: function (value) {
                        return /^\d{10}$/.test(value);
                    }
                }
            }),
 
            /*Country Validation Function*/
            country: ko.observable("").extend({
                required: true,
                pattern: {
                    params: /^[A-Za-z\s]+$/,
                    message: "Please enter a valid Country Name"
                },
                minLength: {
                    params: 3,
                    message: "The Country Name should at least contain 3 characters"
                }
            }),
 
            /*State Validation Function*/
            state: ko.observable("").extend({
                required: true,
                pattern: {
                    params: /^[A-Za-z\s]+$/,
                    message: "Please enter a valid State Name"
                },
                minLength: {
                    params: 3,
                    message: "The State Name should at least contain 3 characters"
                }
            }),
 
            /*Date of Birth Function*/
            dob: ko.observable("").extend({
                required: true,
                message: "Please select the Date of Birth"
            }),
 
           /*Gender Validation Function*/
            gender: ko.observable("").extend({
                required: true,
                message: "Please select your Gender"
            }),
 
            /*Form Logic Function*/
            handleSubmit: function () {
                if (!this.firstName.isValid() || !this.lastName.isValid() || !this.dob.isValid() || !this.country.isValid() || !this.state.isValid() || !this.gender.isValid() || !this.phoneNumber.isValid()) {
                    alert("Please fill-in all the Fields");
                    return;
                }
                console.log('SUBMITTED FORM');
                var details = {
                    firstName: this.firstName(),
                    lastName: this.lastName(),
                    dob: this.dob(),
                    country: this.country(),
                    state: this.state(),
                    gender: this.gender(),
                    phoneNumber: this.phoneNumber(),
                };
                alert("Details Submitted Successfully!");
                console.log(details);
            }  
        };
        ko.validation.group(vm);
 
        function canActivateM() {
            console.log('canActivate');
            return true;
        }
 
        function activateM() {
            console.log('Activate');
        }
 
        function compositionCompleteM() {
            console.log('compositionComplete');
        }
 
        function canDeactivateM() {
            console.log('canDeactivate');
            return true;
        }
 
        return vm;
    });
