using Microsoft.AspNetCore.Mvc;
using System.Net.Http;
using System.Threading.Tasks;
using System.Text.Json;

namespace GoogleMapsAPI.Controllers
{
    [Route("api/property")]
    [ApiController]
    public class PropertyController : ControllerBase
    {
        private readonly HttpClient _httpClient;
        private const string ApiKey = "YOUR_GOOGLE_MAPS_API_KEY"; // Replace with your actual API Key

        public PropertyController(HttpClient httpClient)
        {
            _httpClient = httpClient;
        }

        // 1️⃣ Convert Address to Latitude & Longitude
        [HttpGet("geocode")]
        public async Task<IActionResult> GetLatLng([FromQuery] string address)
        {
            if (string.IsNullOrEmpty(address))
                return BadRequest("Address is required.");

            string url = $"https://maps.googleapis.com/maps/api/geocode/json?address={address}&key={ApiKey}";
            var response = await _httpClient.GetAsync(url);
            var content = await response.Content.ReadAsStringAsync();

            var geocodeResponse = JsonSerializer.Deserialize<GeocodeResponse>(content);
            if (geocodeResponse?.results.Length > 0)
            {
                var location = geocodeResponse.results[0].geometry.location;
                return Ok(new { Latitude = location.lat, Longitude = location.lng });
            }

            return NotFound("No location found.");
        }

        // 2️⃣ Get Google Maps Static Image
        [HttpGet("mapimage")]
        public IActionResult GetMapImage([FromQuery] double lat, [FromQuery] double lng)
        {
            string imageUrl = $"https://maps.googleapis.com/maps/api/staticmap?center={lat},{lng}&zoom=18&size=600x400&maptype=satellite&markers=color:red|{lat},{lng}&key={ApiKey}";
            return Ok(new { ImageUrl = imageUrl });
        }
    }

    // DTOs for JSON Parsing
    public class GeocodeResponse
    {
        public GeocodeResult[] results { get; set; }
    }

    public class GeocodeResult
    {
        public GeocodeGeometry geometry { get; set; }
    }

    public class GeocodeGeometry
    {
        public GeocodeLocation location { get; set; }
    }

    public class GeocodeLocation
    {
        public double lat { get; set; }
        public double lng { get; set; }
    }
}
