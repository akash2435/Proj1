[HttpPost]
[Route("login")]
public async Task<IActionResult> Login([FromBody] LoginModel loginModel)
{
    var user = await _userManager.FindByNameAsync(loginModel.Username);

    if (user == null)
    {
        return Unauthorized(new Response { Status = "Error", Message = "Invalid username or password." });
    }

    // Check if the entered password is correct
    var isPasswordValid = await _userManager.CheckPasswordAsync(user, loginModel.Password);

    if (!isPasswordValid)
    {
        return Unauthorized(new Response { Status = "Error", Message = "Invalid username or password." });
    }

    if (user.TwoFactorEnabled)
    {
        // Handle two-factor authentication if enabled
        // ... (code for sending OTP to email)

        return StatusCode(StatusCodes.Status200OK,
            new Response { Status = "Success", Message = $"We have sent an OTP to your Email {user.Email}" });
    }

    // Generate JWT token if authentication is successful
    var authClaims = new List<Claim>
    {
        new Claim(ClaimTypes.Name, user.UserName),
        new Claim(JwtRegisteredClaimNames.Jti, Guid.NewGuid().ToString()),
    };

    var userRoles = await _userManager.GetRolesAsync(user);
    foreach (var role in userRoles)
    {
        authClaims.Add(new Claim(ClaimTypes.Role, role));
    }

    var jwtToken = GetToken(authClaims);

    return Ok(new
    {
        token = new JwtSecurityTokenHandler().WriteToken(jwtToken),
        expiration = jwtToken.ValidTo
    });
}
